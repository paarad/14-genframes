// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(cuid())
  clerkId           String    @unique
  email             String    @unique
  firstName         String?
  lastName          String?
  plan              String    @default("FREE") // FREE, PRO
  
  // Usage tracking
  framesUsedMonth   Int       @default(0)
  shotsUsedMonth    Int       @default(0)
  periodStartAt     DateTime  @default(now())
  
  // Payment info
  subscriptionId    String?
  customerId        String?
  
  projects          Project[]
  
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Project {
  id          String   @id @default(cuid())
  title       String
  description String?
  style       String   @default("realistic") // pencil, noir, anime, realistic, meme
  
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  shots       Shot[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Shot {
  id          String   @id @default(cuid())
  title       String
  action      String
  camera      String?  // "Wide shot", "Close-up", "Medium shot", etc.
  duration    String?  // "3 seconds", "Beat", etc.
  order       Int
  
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  frames      Frame[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Frame {
  id          String   @id @default(cuid())
  imageUrl    String
  prompt      String
  seed        String?  // For reproducibility
  style       String   // pencil, noir, anime, realistic, meme
  
  shotId      String
  shot        Shot     @relation(fields: [shotId], references: [id], onDelete: Cascade)
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
